obj<-cbind(r1obj,r2obj[2:3])
names(obj)[2:5] <- c(2:5)
obj <-obj %>%  arrange(desc(PP2Status))
kable(
obj,
caption="Percent occurrence of OBJ boundary (frequency of occurrence in parenthesis) as a function of sentence type and Reading.",
col.names = c("", "D", "Q","D", "Q"),
align="c"
) %>%
add_header_above(c(" "=1,"Reading 1"=2,"Reading 2"=2)) %>%
kable_styling(latex_options = c("hold_position"))
names(pp1)[2:5] <- c(2:5)
pp1 <-pp1 %>%  arrange(desc(PP2Status))
kable(
pp1,
caption="Percent occurrence of PP1 boundary (frequency of occurrence in parenthesis) as a function of sentence type and Reading.",
col.names = c("", "D", "Q","D", "Q"),
align="c"
) %>%
add_header_above(c(" "=1,"Reading 1"=2,"Reading 2"=2)) %>%
kable_styling(latex_options = c("hold_position"))
r2pdata<-droplevels(subset(mdata,Reading==2 & simple2lvl != "NEITHER"))
qdata <- subset(r2pdata,PP2Status=="Arg")
ddata <- subset(r2pdata,PP2Status=="Mod")
qpros<-table(qdata$simple2lvl,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$simple2lvl,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r2combo<-as.data.frame(cbind(dpros,qpros))
write_csv(r2combo,"export/ccombo.csv")
r1pdata<-droplevels(subset(mdata,Reading==1 & simple2lvl != "NEITHER"))
qdata <- subset(r1pdata,PP2Status=="Arg")
ddata <- subset(r1pdata,PP2Status=="Mod")
qpros<-table(qdata$simple2lvl,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$simple2lvl,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r1combo<-as.data.frame(cbind(dpros,qpros))
bothrbothb <- cbind(r1combo,r2combo)
bothrbothb <- bothrbothb %>% as_tibble(.name_repair = "unique")
row.names(bothrbothb) <- c("2Both","1OBJ","3PP1")
bothrbothb<-arrange(bothrbothb,row.names(bothrbothb))
row.names(bothrbothb) <- c("OBJ only","Both","PP1 only")
kable(
bothrbothb,
caption="Percent occurrence of both boundaries as a function of sentence type and Reading.",
align="c",
col.names=rep(c("D","Q"),4)
) %>%
add_header_above(c(" "=1,rep(c("Mod" = 2, "Arg"=2),2))) %>%
add_header_above(c(" "=1, "Reading 1" = 4, "Reading 2" = 4)) %>%
column_spec(1,bold=T)%>% kable_styling(latex_options = "hold_position")
mdata$SentenceType <- paste(mdata$SpeechAct,mdata$PP2Status)
adata <- subset(mdata,simple2lvl!="NEITHER")
adata$reading <- paste("Reading", adata$Reading)
ggplot(adata,
aes(
x=reorder(SentenceType, sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 3, ifelse(simple2lvl=="OBJ",1,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ") +
facet_grid(cols = vars(reading)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("OBJ", "BOTH", "PP1"), palette="Greys")
ggsave("bothbreaks2.pdf",height=3.75,device=cairo_pdf)
# dev.off()
library(ggplot2)
library(ggthemes)
library(extrafont)
adata <- subset(mdata,simple2lvl!="NEITHER")
adata$reading <- paste("Reading", adata$Reading)
adata$dom <- ifelse(adata$pdom,"PP1",ifelse(adata$odom,"OBJ","Equal strength"))
ggplot(adata,
aes(
x=reorder(SentenceType, sto(SentenceType)),
y=..count..,
fill=reorder(
dom,
ifelse(simple2lvl=="OBJ", 1, ifelse(simple2lvl=="PP1",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Dominant break",x="Sentence Type",y="Percent where dominant") +
facet_grid(cols = vars(reading)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "Equal strength", "OBJ"), palette="Greys")
ggsave("bdom.pdf",device=cairo_pdf)
# dev.off()
csv <- '
Outcome: OBJ break (Full),Estimate,Std. Error,p
"D Mod, Reading 1 (Intercept)",0.93,0.59,.11
Q,                             0.83,0.74,.26
Arg,                          -1.4,0.71,< .05
Reading 2,                     0.56,0.35,.11
Q:Arg,                        -1.03,1.00,.30
Q:Reading2,                   -0.81,0.48,.09
Arg:Reading2,                  0.29,0.46,.53
Q:Arg:Reading2,                0.97,0.65,.13
'
tab <- read_csv(csv,na=character())
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting OBJ break occurrence (Full)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- 'Outcome: OBJ break (Reduced),Estimate,Std. Error,p
"Mod, Reading 1 (Intercept)",1.39,0.45,< .01
Reading 2,0.11,0.23,.62
Arg,-1.98,0.5,< .001
Reading2:Arg,0.81,0.32,< .05'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting OBJ break occurrence (Reduced)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: PP1 break (Full),Estimate,Std. Error,p
"D Mod, Reading 1 (Intercept)",0.68,0.07,< .001
Q,0.01,0.09,.89
Arg,0.31,0.09,< .001
Reading 2,0.00,0.04,.99
Q:Arg,0.00,0.13,0.97
Q:Reading2,-0.01,0.06,.82
Arg:Reading2,0.00,0.06,.99
Q:Arg:Reading2,0.00,0.08,.97
'
tab <- read_csv(csv,na=character())
tab %>% kable(
align="rrrl",
caption="Mixed effects logistic regression model predicting PP1 break occurrence (Full)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: PP1 break (Reduced),Estimate,Std. Error,p
"Mod (Intercept)",0.96,0.3,< .01
Arg,4.12,0.44,< .001
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting PP1 break occurrence (Reduced)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: OBJ-dominance (Full),Estimate,Std. Error,p
"D Mod, Reading 1 (Intercept)",0.50,0.09,< .001
Q,0.03,0.12,0.82
Arg,-0.45,0.12,< .001
Reading 2,0.07,0.05,.22
Q:Arg,-0.03,0.17,.86
Q:Reading2,-0.03,0.07,.68
Arg:Reading2,0.03,0.07,.71
Q:Arg:Reading2,0.00,0.11,.97
'
tab <- read_csv(csv,na=character())
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting OBJ break dominance (Full)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: OBJ-dominance (Reduced),Estimate,Std. Error,p
"Mod, Reading 1 (Intercept)",-0.16,0.32,.62
Reading 2,0.4,0.16,< .05
Arg,-2.32,0.18,< .001
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting OBJ break dominance (Reduced)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: PP1-dominance (Reduced),Estimate,Std. Error,p
"D Mod, Reading 1 (Intercept)",-0.19,0.33,.57
Reading 2,-0.38,0.15,< .05
Q,0.31,0.15,< .05
Arg,2.2,0.17,< .001
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting PP1 break dominance (Reduced)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
,Estimate,Std. Err,p,Estimate,Std. Err,p
D Mod (Intercept),0.66,0.24,< 0.01,-0.97,0.27,< .001
Q,-0.3,0.22,0.16,0.35,0.22,.1
Arg,-2.07,0.24,< 0.001,2.15,0.24,< .001
'
tab <- read_csv(csv)
tab %>% kable(
col.names=c("(Reading 2 only)","Estimate","Std. Err","p","Estimate","Std. Err","p"),
align="rccc",  caption="Mixed effects logistic regression models predicting break dominance in Reading 2 (Reduced)."
) %>%
add_header_above(c(" "=1, "Outcome: OBJ Dominance" = 3, "Outcome: PP1 Dominance" = 3)) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
irt_props <- describe(irt_data$irt)
wirt_props <- describe(irt_data$win_irt)
### sd by condition table
sdByConditionLong <- aggregate(
irt_data$win_irt,
by=list(
"Q"=irt_data$Q,
"GP"=irt_data$GP
),
FUN=sd
)
### means by condition table
meansByConditionLong <- aggregate(
irt_data$win_irt,
by=list(
"Q"=irt_data$Q,
"GP"=irt_data$GP
),
FUN=mean
)
names(meansByConditionLong)[3] <- "mean"
### concise means by condition table
meansByCondition <- meansByConditionLong %>% spread(Q,mean)
names(meansByCondition)[1] <- "Condition"
### add sd and se to meansByConditionLong
meansByConditionLong$sd<-sdByConditionLong$x
meansByConditionLong$se<-sdByConditionLong$x/sqrt(irt_props$n)
### difference in condition means
diffs<-list(Condition="Increase", `D`=diff(meansByCondition$`D`), `Q`= diff(meansByCondition$`Q`))
meansByCondition<-rbind(meansByCondition, diffs)
cdiff <- meansByCondition$`D`[3]-meansByCondition$`Q`[3]
meansByConditionS <- meansByCondition
meansByConditionS$`D` <- meansByConditionS$`D`/1000
meansByConditionS$`Q` <- meansByConditionS$`Q`/1000
meansByConditionS$Condition <- c("Mod", "Arg", "Mod - Arg")
meansByConditionS$`Q - D` <- meansByConditionS$Q - meansByConditionS$D
meansByConditionLong$Qn <- ifelse(
meansByConditionLong$Q == "Q",
"Interrogative",
"Declarative"
)
meansByConditionLong$GPn <- ifelse(
meansByConditionLong$GP == "+GP",
"Arg",
"Mod"
)
ggplot(
meansByConditionLong,
aes(mean/1000,x=reorder(GPn, desc(GPn)),y=mean/1000,group=Qn,linetype=Qn)
) +
geom_line() +
geom_point() +
ylim(5.75,7.25) +
geom_errorbar(aes(ymin=(mean-se)/1000, ymax=(mean+se)/1000), width=.125) +
labs(
x="",
y="Mean IRT (ms)",
linetype="",
subtitle = "Error bars represent one standard error"
)
ggsave("interact.pdf",device=cairo_pdf())
# dev.off()
csv <- '
IRT Full Model,Estimate,Std. Error,p
D Mod (Intercept),6.32,0.59,< .001
Q,0.29,0.3,.34
Arg,0.42,0.3,.17
Q:Arg,0.08,0.43,.85
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption=
"Linear mixed effects regression model predicting IRT by sentence type with interaction term (Full)."
) %>%
kable_styling(latex_options = "hold_position")
csv <- '
IRT Reduced Model,Estimate,Std. Error,p
Mod (Intercept),6.47,0.58,< .001
Arg,0.46,0.21,< .05
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption=
"Linear mixed effects regression model predicting IRT by sentence type (Reduced)."
) %>%
kable_styling(latex_options = "hold_position")
library(scales)
library(readr)
irt_fillers <- subset(read_csv("export/all_data.csv"), isFiller)
mean.irtByQ <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q),
FUN=mean
)
mean.irtByPP <- aggregate(
irt_fillers$irt,
by=list("+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mean.irtByQnPP <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q,"+PP"=irt_fillers$Condition_GP),
FUN=mean
)
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs <- subset(raw_rs_file,!isFiller & Leading < 15000)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "R1", "R2")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Bin size = 0.5s") +
xlab("R1/R2 Delay in seconds") +
ylab("Frequency")
ggsave("deldis.pdf",device=cairo_pdf())
# dev.off()
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
ggplot(pdata,
aes(
x=reorder(SentenceType,sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 1, ifelse(simple2lvl=="OBJ",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ",caption="FAST n=12, SLOW n = 12") +
facet_grid(rows = vars(reading),cols=vars(r1DelCat)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "BOTH", "OBJ"), palette="Greys")
ggsave("facet.pdf",device=cairo_pdf())
# dev.off()
adata$both <- adata$simple2lvl=="BOTH"
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
r1tab<-tab
r2data<-subset(adata,Reading==2)
fast <- subset(r2data,r1DelCat == "FAST")
slow <- subset(r2data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
tab <- rbind(r1tab,tab)
tab %>% kable(
align="c",
caption="Break pattern by sentence type and R1 delay category.",
col.names=c(" ", rep(c("D Arg","D Mod", "Q Arg", "Q Mod"),2))
) %>% kable_styling() %>%
column_spec(5,border_right = T) %>%
collapse_rows(columns = 1) %>%
add_header_above(c(" " = 1,"FAST (n=12)"=4,"SLOW (n=12)"=4)) %>%
pack_rows(index = c("Reading 1" = 6, "Reading 2" = 6))
xdata <- subset(adata,r1DelCat != "NORMAL")
r1df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==1))) %>% as.data.frame
r2df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==2))) %>% as.data.frame
dfs <- subset(r1df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0)
dfs <- cbind("r1"=dfs,"r2"=subset(r2df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0))
dfs$deltaBOTH <- dfs$r1.BOTH - dfs$r2.BOTH
dfs$deltaBothCat <- ifelse(dfs$deltaBOTH > 0, "Decrease",ifelse(dfs$deltaBOTH < 0,"Increase","No change"))
csv <- '
PP2 head model,Estimate,Std. Error,p
D \\em{into/onto} (Intercept),6.76,0.58,< .001
Q,0.32,0.21,.13
\\em{from},-0.08,0.27,.77
\\em{of},-0.84,0.27,< .01
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
escape=F,
caption=
"Linear mixed effects regression model predicting IRT by Speech Act and PP2 head."
) %>%
kable_styling(latex_options = "hold_position")
library(ggplot2)
library(ggthemes)
library(extrafont)
adata <- subset(mdata,simple2lvl!="NEITHER")
adata$reading <- paste("Reading", adata$Reading)
adata$dom <- ifelse(adata$pdom,"PP1",ifelse(adata$odom,"OBJ","Equal strength"))
r2pdata<-droplevels(subset(adata,Reading==2))
qdata <- subset(r2pdata,PP2Status=="Arg")
ddata <- subset(r2pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r2combo<-as.data.frame(cbind(dpros,qpros))
write_csv(r2combo,"export/ccombo.csv")
r1pdata<-droplevels(subset(adata,Reading==1))
qdata <- subset(r1pdata,PP2Status=="Arg")
ddata <- subset(r1pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r1combo<-as.data.frame(cbind(dpros,qpros))
bothrbothb <- cbind(r1combo,r2combo)
bothrbothb <- bothrbothb %>% as_tibble(.name_repair = "unique")
row.names(bothrbothb) <- c("2Both","1OBJ","3PP1")
bothrbothb<-arrange(bothrbothb,row.names(bothrbothb))
row.names(bothrbothb) <- c("OBJ dominant","Equal strength","PP1 dominant")
library(ggplot2)
library(ggthemes)
library(extrafont)
adata <- subset(mdata,simple2lvl!="NEITHER")
adata$reading <- paste("Reading", adata$Reading)
adata$dom <- ifelse(adata$pdom,"PP1",ifelse(adata$odom,"OBJ","Equal strength"))
r2pdata<-droplevels(subset(adata,Reading==2))
qdata <- subset(r2pdata,PP2Status=="Arg")
ddata <- subset(r2pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r2combo<-as.data.frame(cbind(dpros,qpros))
write_csv(r2combo,"export/ccombo.csv")
r1pdata<-droplevels(subset(adata,Reading==1))
qdata <- subset(r1pdata,PP2Status=="Arg")
ddata <- subset(r1pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r1combo<-as.data.frame(cbind(dpros,qpros))
bothrbothb <- cbind(r1combo,r2combo)
bothrbothb <- bothrbothb %>% as_tibble(.name_repair = "unique")
row.names(bothrbothb) <- c("2Both","1OBJ","3PP1")
bothrbothb<-arrange(bothrbothb,row.names(bothrbothb))
row.names(bothrbothb) <- c("OBJ dominant","Equal strength","PP1 dominant")
kable(
bothrbothb,
caption="Percent occurrence of both boundaries as a function of sentence type and Reading.",
align="c",
col.names=rep(c("D","Q"),4)
) %>%
add_header_above(c(" "=1,rep(c("Mod" = 2, "Arg"=2),2))) %>%
add_header_above(c(" "=1, "Reading 1" = 4, "Reading 2" = 4)) %>%
column_spec(1,bold=T)%>% kable_styling(latex_options = "hold_position")
