irt.noItem <- lme4::lmer(
wirt ~ Condition_Q * Condition_GP +
(1 | Participant),
data = irt_data,
REML=F
)
irt.noFxd <- lme4::lmer(
wirt ~
(1 | Participant) +
(1 | Item),
data = irt_data,
REML=F
)
irt.noRand <- lm(wirt ~ Condition_Q * Condition_GP,
data = irt_data)
irt.dummy <- lm(wirt ~ Condition_Q * Condition_GP,
data = irt_data
)
irt.dummy.noInt <- lm(wirt ~  Condition_Q + Condition_GP +
Participant + Item,
data = irt_data
)
irt.demoModel.KS <- lmerTest::lmer(
wirt ~ Condition_Q * Condition_GP + Semester + wkd + Gender + ease + timeslot +
bookReading + lightReading + Monolingual + (1|Participant) + (1|Item),
data = irt_data,
REML=F
)
irt.demoModel <- lmerTest::lmer(
wirt ~ Condition_Q * Condition_GP + Semester + wkd +
Monolingual + (1|Participant) + (1|Item),
data = irt_data,
REML=F
)
irt.summer <- lmerTest::lmer(
wirt ~ Condition_Q * Condition_GP +
Monolingual + (1|Participant) + (1|Item),
data = subset(irt_data, Semester!="Summer"),
REML=F
)
huxreg(
list(
"Full"=irt.full,
"No interaction"=irt.noInteraction,
"No random effects"=irt.noRand,
"No fixed effects"=irt.noFxd
),
coefs = c(
"+GP"="Condition_GPTRUE",
"Q"="Condition_QTRUE",
"+GP Q"="Condition_QTRUE:Condition_GPTRUE"
),
note=NULL,
statistics = c(N="nobs","logLik","AIC")
) %>%
set_caption("Models") %>%
set_label("tab:models") %>%
set_tabular_environment("tabular")
cols <- c(
"Df",
"AIC",
"BIC",
"logLik",
"deviance",
"$\\chi^2$",
"Df($\\chi$)",
"Pr(>$\\chi^2$)"
)
comp <-anova(irt.full,irt.noFxd)
row.names(comp) <- c("No fixed effects", "Full")
kable(comp,caption="Full model vs. no fixed effects",col.names=cols,escape=F)
comp <-anova(irt.full,irt.noInteraction)
row.names(comp) <- c("No interaction", "Full")
kable(comp,caption="Full model vs. no interaction",col.names=cols,escape=F)
comp <- anova(irt.full,irt.noRand)
row.names(comp) <- c("No random effects", "Full")
kable(comp,caption="Full model vs. no random effects",col.names=cols,escape=F)
### tab <- hux(comp[,c(1:2,4,6:8)],autoformat = T)
### tab <- add_rows(
###   tab,
###   hux("Df","AIC","logLik","&Chi;<sup>2</sup>","Df(&Chi;)","p value"),
###   after=0
### )
### tab <- insert_column(
###   tab, c("","No random effects", "Full")
### )
###
### tab %>% set_escape_contents(F,row=1,col=5:7) %>%
###   set_number_format(value=2,col = c(3:5,7),row=2:3) %>%
###   set_label("tab:modComp2") %>%
###   set_caption("No random effects vs. full model") %>%
###   set_top_border(row=1,value=1,col=everywhere) %>%
###   set_bottom_border(row=1,value=1,col=2:7) %>%
###   set_bottom_border(row=final(1),value=1,col=everywhere)
### means by condition table
meansByVerb <- aggregate(
irt_data$win_irt/1000,
by=list(
"Condition"=irt_data$cond,
"Verb"=irt_data$V
),
FUN=mean
) %>% spread(Condition,x)
### sd by condition table
sdByVerb <- aggregate(
irt_data$win_irt/1000,
by=list(
"Condition"=irt_data$cond,
"Verb"=irt_data$V
),
FUN=sd
) %>% spread(Condition,x)
meansByVerb$`Declarative GP effect`<-meansByVerb$`D +GP`-meansByVerb$`D -GP`
meansByVerb$`Interrogative GP effect`<-meansByVerb$`Q +GP`-meansByVerb$`Q -GP`
meansByVerb$`Difference in effect`<-meansByVerb$`Declarative GP effect`-meansByVerb$`Interrogative GP effect`
meansNsd<-sdByVerb
for (col in colnames(meansNsd)[2:5]){
meansNsd[[col]]<- paste(
round(meansByVerb[[col]],1),
" (",
round(meansNsd[[col]],1),
")",
sep=""
)
}
kable(
meansNsd,
caption="Mean (sd) wIRT by condition and verb in seconds"
) %>%
kable_styling(latex_options = "hold_position")
kable(meansByVerb[,c(1,6:8)],caption="Effect of GP on wIRT by verb", digits=1) %>% kable_styling(latex_options = "hold_position")
kable(
pmeansByCondition[c(1:5)],
caption="Mean wIRT (ms) by condition and participant",
longtable=T
)%>% kable_styling(latex_options = c("hold_position", "repeat_header"))
mean.irtByQ <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q),
FUN=mean
)
mean.irtByPP <- aggregate(
irt_fillers$irt,
by=list("+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mean.irtByQnPP <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q,"+PP"=irt_fillers$Condition_GP),
FUN=mean
)
fillerModel <- lme4::lmer(
irt ~ Condition_Q + (1 |Participant) + (1 |Item),
data=irt_fillers,
REML=F
)
fillerModel.pp <- lme4::lmer(
irt ~ Condition_Q * Condition_GP + (1|Participant) + (1 |Item),
data=irt_fillers,
REML=F
)
fillerModel.ppNoInt <- lme4::lmer(
irt ~ Condition_Q + Condition_GP + (1|Participant) + (1 |Item),
data=irt_fillers,
REML=F
)
huxreg(
list("Only Interogitivity"=fillerModel,"Full"=fillerModel.pp,"No interaction"=fillerModel.ppNoInt),
number_format = 2,
coefs=c(
"(Intercept)"="(Intercept)",
"Q" = "Condition_QTRUE",
"+GP" ="Condition_GPTRUE",
"Q * +GP" = "Condition_QTRUE:Condition_GPTRUE"
)
)
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs_file$UID <- as.factor(with(raw_rs_file, paste(Participant,Item,Reading,sep="-")))
raw_rs_file <- subset(raw_rs_file,UID %in% mdata$UID)
raw_rs <- subset(raw_rs_file,!isFiller)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "Cold", "Previewed")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Distribution of delay by reading",
subtitle = "Bin size = 0.5s")
diffs <- raw_rs[c("Reading","Leading","Participant","Item","isFiller",
"Condition_Q","Condition_GP")]  %>% spread(Reading,Leading)
diffs$diffs <- diffs$Previewed-diffs$Cold
diffDis<- describe(diffs$diffs)
diffsByP<-aggregate(diffs~Participant,data=diffs,FUN=function(x){round(mean(x))})
colnames(diffsByP) <- c("Participant", "Mean difference in delay (ms)")
diffsByP.props <- describe(diffsByP$`Mean difference in delay (ms)`)
knitr::opts_chunk$set(
echo=FALSE,
warning=FALSE,
message=FALSE,
fig.height = 3,
fig.pos="H"
)
options(tinytex.verbose = TRUE)
bgcolor <- "#ffffff"
par(bg = bgcolor)
kable <- function(data,...) {
knitr::kable(data, booktabs = TRUE,...)
}
ms2s<-function(x,d=2) {
return (format(x/1000,nsmall=d,digits=d))
}
library(extrafont)
library(readr)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(psych)
library(ggthemes)
hidel <- 1050
lodel <- 901
mdata <- read_csv("../drafts/export/prosody_data.csv")
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs_file$UID <- as.factor(with(raw_rs_file, paste(Participant,Item,Reading,sep="-")))
raw_rs_file <- subset(raw_rs_file,UID %in% mdata$UID)
raw_rs <- subset(raw_rs_file,!isFiller)
raw_rs$reading <- raw_rs$Reading
r1data <- subset(raw_rs, reading == 1)
r1delByP <- aggregate(r1data$Leading,by=list("Participant" = r1data$Participant), FUN=median)
r1delByP$r1DelCat <- ifelse(r1delByP$x < lodel, "FAST", ifelse(
r1delByP$x > hidel, "SLOW", "NORMAL"
))
catdes <- sprintf("FAST median R1 delay $\\\\leq$ %0.2fs. SLOW median R1 delay $>$ %0.2fs",lodel/1000,hidel/1000)
r1deldes <- describe(r1delByP$r1delbyp)
r2pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
r2pp1Mod
objMod<- glmer(OBJ~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
objMod
objMod %>% summary
r2pp1Mod %>% summary
pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
pp1Mod
pp1Mod %>% summary
pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+Reading+(1|IID)+(1|SID),data=mdata,family=binomial)
pp1Mod
pp1Mod %>% summary
pp1Mod<- glmer(PP1~Condition_Q*Condition_GP*Reading+(1|IID)+(1|SID),data=mdata,family=binomial)
pp1Mod %>% summary
r1pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+Reading+(1|IID)+(1|SID),data=subset(mdata,Reading==1_),family=binomial)
r1pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+Reading+(1|IID)+(1|SID),data=subset(mdata,Reading==1),family=binomial)
r1pp1Mod
r1pp1Mod %>% summary
r1pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=subset(mdata,Reading==1),family=binomial)
r1pp1Mod
r1pp1Mod %>% summary
knitr::opts_chunk$set(
echo = FALSE,
fig.height = 3,
message = FALSE,
warning = FALSE
)
library(readr)
library(jsonlite)
library(dplyr)
library(knitr)
library(kableExtra)
library(pander)
kable<-function (data,...){
if(is_html_output() | is_latex_output()) {
return (knitr::kable(data,...))
} else {
return (pander(data))
}
}
library(irr)
library(readr)
all <- read_csv2("export/prosody_validity.csv")
# columns to iterate
vals = c("V","OBJ","PP1","STRONG","WEAK","STRUG","STRUG_START","QI")
# raters to compare to main
suffixes=c("-dr","-sp")
# comps will hold string rep of Agr%, Kappa, (z) *pval*
comps <- matrix(nrow=6,ncol=length(vals))
colnames(comps)<-vals
# aggs will hold just agree%
aggs <- matrix(nrow=2,ncol=length(vals),dimnames = list(suffixes))
colnames(aggs)<-vals
# for each col...
for(val in vals) {
# for each rater...
sufn = 0
for(suf in suffixes) {
row = 3 * sufn + 1
sufn = sufn + 1
# d is 120 rows, 2 col, where col[1] = main, col[2] = suf rater
d <- cbind(all[[paste0(val)]],all[[paste0(val,suf)]])
a <-kappa2(d)
ag <- agree(d)
aggs[suf,val] <- paste0(ag$value,"%")
comps[row,val] <- sprintf(
"%0.1f%%",
ag$value
)
comps[row+1,val] <- sprintf(
"K = %0.2f%s",
a$value,
ifelse(a$p.value < 0.001,"***",
ifelse(a$p.value < 0.01,"**",
ifelse(a$p.value < 0.05,"*",
ifelse(a$p.value < 0.1," .",
"")))))
comps[row+2,val] <- sprintf(
"(z = %0.2f)",
a$statistic
)
# comps[suf,val] <- sprintf(
#   "%0.1f%s %0.2f%s <br> (z = %0.2f)",
#   ag$value,
#   "% <br> K = ",
#   a$value,
#   ifelse(a$p.value < 0.001,"***",
#          ifelse(a$p.value < 0.01,"**",
#                 ifelse(a$p.value < 0.05,"*",
#                   ifelse(a$p.value < 0.1," .",
#                          "")))),
#   a$statistic
# )
}
}
comps <- comps %>% as.data.frame()
labels <- matrix(c(rep("Inter-rater",3),rep("Intra-rater",3)))
comps <- cbind(labels,comps)
library(ggplot2)
library(ggthemes)
library(extrafont)
library(psych)
library(Cairo)
loadfonts("pdf")
knitr::opts_chunk$set(
echo=FALSE,
warning=FALSE,
message=FALSE,
error = F,
fig.height = 3,
fig.pos="H"
)
bgcolor <- "#ffffff"
par(bg = bgcolor)
kable <- function(...) {
knitr::kable(booktab = TRUE,...)
}
### global plot themeing
theme_set(
theme_tufte(base_size = 12) +
theme(
plot.background = element_rect(fill = bgcolor,color=bgcolor),
panel.border = element_blank()
)
)
# sentence type order
sto <- function (SentenceType) {
ifelse(SentenceType %in% c("D Arg", "Q Arg", "D Mod", "Q Mod"),
return(
ifelse(
SentenceType=="Q Arg",
length(SentenceType),
ifelse(
SentenceType=="D Arg",
length(SentenceType)-1,
ifelse(
SentenceType=="Q Mod",
length(SentenceType)-2,
length(SentenceType)-3
)
)
)
),
return(1)
)
}
library(kableExtra)
library(readr)
library(dplyr)
mdata <- read_csv("export/prosody_data.csv")
versiontab <- mdata %>%
filter(!duplicated(Participant)) %>%
with(table("Version"=LIST,Order)) %>%
addmargins()
rownames(versiontab)[1:4]<-paste("Version", rownames(versiontab))
versiontab %>% kable(
caption="Number of participants per version-order combination.",
col.names = c("1", "2", "Sum"),
align="c"
) %>% kable_styling() %>%
add_header_above(c(" "=1, "Order"=2, " "=1)) %>%
kable_styling(latex_options = c("hold_position"))
library(tidyr)
tot<-as.data.frame(xtabs( ~ PP2Status + SpeechAct, data=mdata))
library(ggplot2)
library(ggthemes)
library(extrafont)
library(psych)
library(Cairo)
loadfonts("pdf")
knitr::opts_chunk$set(
echo=FALSE,
warning=FALSE,
message=FALSE,
error = F,
fig.height = 3,
fig.pos="H"
)
bgcolor <- "#ffffff"
par(bg = bgcolor)
kable <- function(...) {
knitr::kable(booktab = TRUE,...)
}
### global plot themeing
theme_set(
theme_tufte(base_size = 12) +
theme(
plot.background = element_rect(fill = bgcolor,color=bgcolor),
panel.border = element_blank()
)
)
# sentence type order
sto <- function (SentenceType) {
ifelse(SentenceType %in% c("D Arg", "Q Arg", "D Mod", "Q Mod"),
return(
ifelse(
SentenceType=="Q Arg",
length(SentenceType),
ifelse(
SentenceType=="D Arg",
length(SentenceType)-1,
ifelse(
SentenceType=="Q Mod",
length(SentenceType)-2,
length(SentenceType)-3
)
)
)
),
return(1)
)
}
library(kableExtra)
library(readr)
library(dplyr)
mdata <- read_csv("export/prosody_data.csv")
versiontab <- mdata %>%
filter(!duplicated(Participant)) %>%
with(table("Version"=LIST,Order)) %>%
addmargins()
rownames(versiontab)[1:4]<-paste("Version", rownames(versiontab))
versiontab %>% kable(
caption="Number of participants per version-order combination.",
col.names = c("1", "2", "Sum"),
align="c"
) %>% kable_styling() %>%
add_header_above(c(" "=1, "Order"=2, " "=1)) %>%
kable_styling(latex_options = c("hold_position"))
library(tidyr)
tot<-as.data.frame(xtabs( ~ PP2Status + SpeechAct, data=mdata))
library(scales)
library(readr)
irt_fillers <- subset(read_csv("export/all_data.csv"), isFiller)
mean.irtByQ <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q),
FUN=mean
)
mean.irtByPP <- aggregate(
irt_fillers$irt,
by=list("+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mean.irtByQnPP <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q,"+PP"=irt_fillers$Condition_GP),
FUN=mean
)
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs <- subset(raw_rs_file,!isFiller & Leading < 15000)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "R1", "R2")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Distribution of R1 delay overlayed with distribution of R2 delay.", subtitle = "Bin size = 0.5s") +
xlab("R1/R2 Delay in seconds") +
ylab("Frequency")
ggsave("deldis.pdf",device=cairo_pdf())
View(raw_rs)
adata
View(adata)
mnom <- multinom(dom ~ Reading * Condition_Q * Condition_GP *r1DelCat + (1|SID) + (1|IID),data=adata)
library(nnet)
mnom <- multinom(dom ~ Reading * Condition_Q * Condition_GP *r1DelCat + (1|SID) + (1|IID),data=adata)
summary(mnom)
stargazer::stargazer(multinom)
stargazer::stargazer(mnom)
stargazer::stargazer(mnom, type="html")
stargazer::stargazer(mnom, type="html",out="mnom.html")
mnom <- multinom(dom ~ Reading * Condition_Q * Condition_GP *r1DelCat + (1|SID) + (1|IID),data=subset(adata, r1DelCat != "NORMAL")
)
summary(mnom)
mnom %>% stargazer
mnom %>% stargazer::stargazer()
mnom %>% stargazer::stargazer("html")
mnom %>% stargazer::stargazer(type="html")
mnom %>% stargazer::stargazer(type="html",out="mnom.html")
