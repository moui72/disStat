mean.irtByPP <- aggregate(
irt_fillers$irt,
by=list("+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mean.irtByQnPP <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q,"+PP"=irt_fillers$Condition_GP),
FUN=mean
)
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs <- subset(raw_rs_file,!isFiller & Leading < 15000)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "R1", "R2")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Bin size = 0.5s") +
xlab("R1/R2 Delay in seconds") +
ylab("Frequency")
ggsave("deldis.pdf",device=cairo_pdf())
# dev.off()
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
ggplot(pdata,
aes(
x=reorder(SentenceType,sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 1, ifelse(simple2lvl=="OBJ",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ",caption="FAST n=12, SLOW n = 12") +
facet_grid(rows = vars(reading),cols=vars(r1DelCat)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "BOTH", "OBJ"), palette="Greys")
ggsave("facet.pdf",device=cairo_pdf())
# dev.off()
adata$both <- adata$simple2lvl=="BOTH"
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
r1tab<-tab
r2data<-subset(adata,Reading==2)
fast <- subset(r2data,r1DelCat == "FAST")
slow <- subset(r2data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
tab <- rbind(r1tab,tab)
tab %>% kable(
align="c",
caption="Break pattern by sentence type and R1 delay category.",
col.names=c(" ", rep(c("D Arg","D Mod", "Q Arg", "Q Mod"),2))
) %>% kable_styling() %>%
column_spec(5,border_right = T) %>%
collapse_rows(columns = 1) %>%
add_header_above(c(" " = 1,"FAST (n=12)"=4,"SLOW (n=12)"=4)) %>%
pack_rows(index = c("Reading 1" = 6, "Reading 2" = 6))
xdata <- subset(adata,r1DelCat != "NORMAL")
r1df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==1))) %>% as.data.frame
r2df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==2))) %>% as.data.frame
dfs <- subset(r1df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0)
dfs <- cbind("r1"=dfs,"r2"=subset(r2df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0))
dfs$deltaBOTH <- dfs$r1.BOTH - dfs$r2.BOTH
dfs$deltaBothCat <- ifelse(dfs$deltaBOTH > 0, "Decrease",ifelse(dfs$deltaBOTH < 0,"Increase","No change"))
csv <- '
PP2 head model,Estimate,Std. Error,p
D \\em{into/onto} (Intercept),6.76,0.58,< .001
Q,0.32,0.21,.13
\\em{from},-0.08,0.27,.77
\\em{of},-0.84,0.27,< .01
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
escape=F,
caption=
"Linear mixed effects regression model predicting IRT by Speech Act and PP2 head."
) %>%
kable_styling(latex_options = "hold_position")
library(ggplot2)
library(ggthemes)
library(extrafont)
adata <- subset(mdata,simple2lvl!="NEITHER")
adata$reading <- paste("Reading", adata$Reading)
adata$dom <- ifelse(adata$pdom,"PP1",ifelse(adata$odom,"OBJ","Equal strength"))
r2pdata<-droplevels(subset(adata,Reading==2))
qdata <- subset(r2pdata,PP2Status=="Arg")
ddata <- subset(r2pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r2combo<-as.data.frame(cbind(dpros,qpros))
write_csv(r2combo,"export/ccombo.csv")
r1pdata<-droplevels(subset(adata,Reading==1))
qdata <- subset(r1pdata,PP2Status=="Arg")
ddata <- subset(r1pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r1combo<-as.data.frame(cbind(dpros,qpros))
bothrbothb <- cbind(r1combo,r2combo)
bothrbothb <- bothrbothb %>% as_tibble(.name_repair = "unique")
row.names(bothrbothb) <- c("2Both","1OBJ","3PP1")
bothrbothb<-arrange(bothrbothb,row.names(bothrbothb))
row.names(bothrbothb) <- c("OBJ dominant","Equal strength","PP1 dominant")
library(ggplot2)
library(ggthemes)
library(extrafont)
adata <- subset(mdata,simple2lvl!="NEITHER")
adata$reading <- paste("Reading", adata$Reading)
adata$dom <- ifelse(adata$pdom,"PP1",ifelse(adata$odom,"OBJ","Equal strength"))
r2pdata<-droplevels(subset(adata,Reading==2))
qdata <- subset(r2pdata,PP2Status=="Arg")
ddata <- subset(r2pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r2combo<-as.data.frame(cbind(dpros,qpros))
write_csv(r2combo,"export/ccombo.csv")
r1pdata<-droplevels(subset(adata,Reading==1))
qdata <- subset(r1pdata,PP2Status=="Arg")
ddata <- subset(r1pdata,PP2Status=="Mod")
qpros<-table(qdata$dom,qdata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
dpros<-table(ddata$dom,ddata$SpeechAct) %>%
prop.table(margin=2) %>% apply(2,percent)
r1combo<-as.data.frame(cbind(dpros,qpros))
bothrbothb <- cbind(r1combo,r2combo)
bothrbothb <- bothrbothb %>% as_tibble(.name_repair = "unique")
row.names(bothrbothb) <- c("2Both","1OBJ","3PP1")
bothrbothb<-arrange(bothrbothb,row.names(bothrbothb))
row.names(bothrbothb) <- c("OBJ dominant","Equal strength","PP1 dominant")
kable(
bothrbothb,
caption="Percent occurrence of both boundaries as a function of sentence type and Reading.",
align="c",
col.names=rep(c("D","Q"),4)
) %>%
add_header_above(c(" "=1,rep(c("Mod" = 2, "Arg"=2),2))) %>%
add_header_above(c(" "=1, "Reading 1" = 4, "Reading 2" = 4)) %>%
column_spec(1,bold=T)%>% kable_styling(latex_options = "hold_position")
irt_data
mean.irtByQ
mean.irtByQ[2,1]
mean.irtByQ[1,1]
mean.irtByQ[1,2]
mean.irtByQ[1,2]-mean.irtByQ[1,1]
mean.irtByQ[1,2]-mean.irtByQ[2,1]
mean.irtByQ[1,2]-mean.irtByQ[2,2]
mean.irtByQ[2,2]-mean.irtByQ[1,2]
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
library(readr)
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
adata$both <- adata$simple2lvl=="BOTH"
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
library(readr)
library(tidyr)
library(dplyr)
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
adata$both <- adata$simple2lvl=="BOTH"
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
library(readr)
library(tidyr)
library(dplyr)
library(scales)
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
adata$both <- adata$simple2lvl=="BOTH"
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
r1tab<-tab
r2data<-subset(adata,Reading==2)
fast <- subset(r2data,r1DelCat == "FAST")
slow <- subset(r2data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
tab <- rbind(r1tab,tab)
tab %>% kable(
align="c",
caption="Break pattern by sentence type and R1 delay category.",
col.names=c(" ", rep(c("D Arg","D Mod", "Q Arg", "Q Mod"),2))
) %>% kable_styling() %>%
column_spec(5,border_right = T) %>%
collapse_rows(columns = 1) %>%
add_header_above(c(" " = 1,"FAST (n=12)"=4,"SLOW (n=12)"=4)) %>%
pack_rows(index = c("Reading 1" = 6, "Reading 2" = 6))
library(kableExtra)
tab %>% kable(
align="c",
caption="Break pattern by sentence type and R1 delay category.",
col.names=c(" ", rep(c("D Arg","D Mod", "Q Arg", "Q Mod"),2))
) %>% kable_styling() %>%
column_spec(5,border_right = T) %>%
collapse_rows(columns = 1) %>%
add_header_above(c(" " = 1,"FAST (n=12)"=4,"SLOW (n=12)"=4)) %>%
pack_rows(index = c("Reading 1" = 6, "Reading 2" = 6))
xdata <- subset(adata,r1DelCat != "NORMAL")
r1df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==1))) %>% as.data.frame
r2df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==2))) %>% as.data.frame
dfs <- subset(r1df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0)
dfs <- cbind("r1"=dfs,"r2"=subset(r2df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0))
dfs$deltaBOTH <- dfs$r1.BOTH - dfs$r2.BOTH
dfs$deltaBothCat <- ifelse(dfs$deltaBOTH > 0, "Decrease",ifelse(dfs$deltaBOTH < 0,"Increase","No change"))
ggplot(pdata,
aes(
x=reorder(SentenceType,sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 1, ifelse(simple2lvl=="OBJ",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ",caption="FAST n=12, SLOW n = 12") +
facet_grid(rows = vars(reading),cols=vars(r1DelCat)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "BOTH", "OBJ"), palette="Greys")
library(ggplot2)
library(ggthemes)
ggplot(pdata,
aes(
x=reorder(SentenceType,sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 1, ifelse(simple2lvl=="OBJ",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ",caption="FAST n=12, SLOW n = 12") +
facet_grid(rows = vars(reading),cols=vars(r1DelCat)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "BOTH", "OBJ"), palette="Greys")
ggsave("facet.pdf",device=cairo_pdf())
# dev.off()
setwd("~/GitHub/disStat/drafts")
library(readr)
library(tidyr)
library(dplyr)
library(scales)
hidel <- 1051
lodel <- 901
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
adata$both <- adata$simple2lvl=="BOTH"
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs <- subset(raw_rs_file,!isFiller & Leading < 15000)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "R1", "R2")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Bin size = 0.5s") +
xlab("R1/R2 Delay in seconds") +
ylab("Frequency")
ggsave("deldis.pdf",device=cairo_pdf())
# dev.off()
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
r1tab<-tab
r2data<-subset(adata,Reading==2)
fast <- subset(r2data,r1DelCat == "FAST")
slow <- subset(r2data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
tab <- rbind(r1tab,tab)
xdata <- subset(adata,r1DelCat != "NORMAL")
r1df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==1))) %>% as.data.frame
r2df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==2))) %>% as.data.frame
dfs <- subset(r1df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0)
dfs <- cbind("r1"=dfs,"r2"=subset(r2df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0))
dfs$deltaBOTH <- dfs$r1.BOTH - dfs$r2.BOTH
dfs$deltaBothCat <- ifelse(dfs$deltaBOTH > 0, "Decrease",ifelse(dfs$deltaBOTH < 0,"Increase","No change"))
library(ggplot2)
library(ggthemes)
ggplot(pdata,
aes(
x=reorder(SentenceType,sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 1, ifelse(simple2lvl=="OBJ",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ",caption="FAST n=12, SLOW n = 12") +
facet_grid(rows = vars(reading),cols=vars(r1DelCat)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "BOTH", "OBJ"), palette="Greys")
ggsave("facet.pdf",device=cairo_pdf())
# dev.off()
setwd("~/GitHub/disStat/drafts")
