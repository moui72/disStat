) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: PP1 break (REDUCED),Estimate,Std. Error,p
"Mod (Intercept)",0.96,0.3,< 0.01
Arg,4.12,0.44,< 0.001
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting PP1 break occurrence (REDUCED)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: OBJ dominance (FULL),Estimate,Std. Error,p
"D Mod, Reading 1 (Intercept)",0.50,0.09,< 0.001
Q,0.03,0.12,0.82
Arg,-0.45,0.12,< 0.001
Reading 2,0.07,0.05,0.22
Q:Arg,-0.03,0.17,0.86
Q:Reading2,-0.03,0.07,0.68
Arg:Reading2,0.03,0.07,0.71
Q:Arg:Reading2,0.00,0.11,0.97
'
tab <- read_csv(csv,na=character())
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting OBJ break dominance (FULL)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: OBJ dominance (REDUCED),Estimate,Std. Error,p
"Mod, Reading 1 (Intercept)",-0.16,0.32,0.62
Reading 2,0.4,0.16,< 0.05
Arg,-2.32,0.18,< 0.001
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting OBJ break dominance (REDUCED)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
Outcome: PP1 dominance (REDUCED),Estimate,Std. Error,p
"D Mod, Reading 1 (Intercept)",-0.19,0.33,0.57
Reading 2,-0.38,0.15,< 0.05
Q,0.31,0.15,< 0.05
Arg,2.2,0.17,< 0.001
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption="Mixed effects logistic regression model predicting PP1 break dominance (REDUCED)."
) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
csv <- '
,Estimate,Std. Err,p,Estimate,Std. Err,p
D Mod (Intercept),0.66,0.24,< 0.01,-0.97,0.27,< 0.001
Q,-0.3,0.22,0.16,0.35,0.22,0.1
Arg,-2.07,0.24,< 0.001,2.15,0.24,< 0.001
'
tab <- read_csv(csv)
tab %>% kable(
col.names=c("(Reading 2 only)","Estimate","Std. Err","p","Estimate","Std. Err","p"),
align="rccc",  caption="Mixed effects logistic regression models predicting break dominance in Reading 2 (REDUCED)."
) %>%
add_header_above(c(" "=1, "Outcome: OBJ Dominance" = 3, "Outcome: PP1 Dominance" = 3)) %>%
row_spec(0,align="c") %>%
kable_styling(latex_options = "hold_position")
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs <- subset(raw_rs_file,!isFiller & Leading < 15000)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "R1", "R2")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Distribution of R1 delay overlayed with distribution of R2 delay.", subtitle = "Bin size = 0.5s") +
xlab("R1/R2 Delay in seconds") +
ylab("Frequency")
ggsave("deldis.pdf",device=cairo_pdf())
dev.off()
hidel <- 1051
lodel <- 901
catdes <- sprintf("FAST median R1 delay < %0.2fs. SLOW median R1 delay > %0.2fs",lodel/1000,hidel/1000)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata$SentenceType <- paste(ifelse(adata$Condition_Q,"Q","D"),ifelse(adata$Condition_GP,"Arg","Mod"))
adata$reading <- paste("Reading", adata$Reading)
pdata <- subset(adata, r1DelCat != "NORMAL")
ggplot(pdata,
aes(
x=reorder(SentenceType,sto(SentenceType)),
y=..count..,
fill=reorder(
simple2lvl,
ifelse(simple2lvl=="PP1", 1, ifelse(simple2lvl=="OBJ",3,2))
)
)) +
geom_bar(position="fill",color="black",width=0.5) +
labs(fill="Pattern",x=" ",y=" ",caption="FAST n=12, SLOW n = 12") +
facet_grid(rows = vars(reading),cols=vars(r1DelCat)) +
scale_y_continuous(labels=scales::percent) +
scale_fill_brewer(breaks=c("PP1", "BOTH", "OBJ"), palette="Greys")
ggsave("facet.pdf",device=cairo_pdf())
dev.off()
adata$both <- adata$simple2lvl=="BOTH"
r1data<-subset(adata,Reading==1)
fast <- subset(r1data,r1DelCat == "FAST")
slow <- subset(r1data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
r1tab<-tab
r2data<-subset(adata,Reading==2)
fast <- subset(r2data,r1DelCat == "FAST")
slow <- subset(r2data,r1DelCat == "SLOW")
fastTabN <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTabN <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTabN<-fastTabN[c(1,sto(names(fastTabN)[2:5])+1)]
slowTabN<-slowTabN[c(1,sto(names(slowTabN)[2:5])+1)]
fastTab <- xtabs(~simple2lvl + SentenceType, data=fast) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
slowTab <- xtabs(~simple2lvl + SentenceType, data=slow) %>%
prop.table(margin=2) %>%
as.data.frame() %>%
spread(SentenceType, Freq)
fastTab<-fastTab[c(1,sto(names(fastTab)[2:5])+1)]
slowTab<-slowTab[c(1,sto(names(slowTab)[2:5])+1)]
tab<-cbind(fastTab,slowTab[2:5])
ntab<-cbind(fastTabN,slowTabN[2:5])
tab[2:9]  <- mapply(percent,tab[,2:9])
ntab[2:9] <- format(ntab[2:9],digits=0)
tab <- rbind(tab,ntab)
colnames(tab)[1] <- "Pattern"
colnames(tab)[6:9] <- paste0(colnames(tab)[6:9],".slow")
tab <- arrange(tab,Pattern)
tab <- tab %>% select(Pattern,everything())
tab <- rbind(r1tab,tab)
tab %>% kable(
align="c",
caption="Break pattern by sentence type and R1 delay category.",
col.names=c(" ", rep(c("D Arg","D Mod", "Q Arg", "Q Mod"),2))
) %>% kable_styling() %>%
column_spec(5,border_right = T) %>%
collapse_rows(columns = 1) %>%
add_header_above(c(" " = 1,"FAST (n=12)"=4,"SLOW (n=12)"=4)) %>%
pack_rows(index = c("Reading 1" = 6, "Reading 2" = 6))
xdata <- subset(adata,r1DelCat != "NORMAL")
r1df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==1))) %>% as.data.frame
r2df <- ftable(xtabs(~Participant + simple2lvl + r1DelCat, subset(xdata,Reading==2))) %>% as.data.frame
dfs <- subset(r1df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0)
dfs <- cbind("r1"=dfs,"r2"=subset(r2df %>% spread(simple2lvl,Freq), BOTH + OBJ + PP1 > 0))
dfs$deltaBOTH <- dfs$r1.BOTH - dfs$r2.BOTH
dfs$deltaBothCat <- ifelse(dfs$deltaBOTH > 0, "Decrease",ifelse(dfs$deltaBOTH < 0,"Increase","No change"))
irt_data <- read_csv("export/irt_data.csv")
ggplot(irt_data, aes(wirt/1000)) +
geom_histogram(binwidth = 0.5,color="white",fill="#333333") +
xlab("wIRT (seconds)") +
ylab("Frequency") +
ggtitle(
"Distribution of wIRT",
subtitle="Bin size = 0.5s"
)
ggsave("wIRT.pdf",device=cairo_pdf)
dev.off()
irt_props <- describe(irt_data$irt)
wirt_props <- describe(irt_data$win_irt)
### sd by condition table
sdByConditionLong <- aggregate(
irt_data$win_irt,
by=list(
"Q"=irt_data$Q,
"GP"=irt_data$GP
),
FUN=sd
)
### means by condition table
meansByConditionLong <- aggregate(
irt_data$win_irt,
by=list(
"Q"=irt_data$Q,
"GP"=irt_data$GP
),
FUN=mean
)
names(meansByConditionLong)[3] <- "mean"
### concise means by condition table
meansByCondition <- meansByConditionLong %>% spread(Q,mean)
names(meansByCondition)[1] <- "Condition"
### add sd and se to meansByConditionLong
meansByConditionLong$sd<-sdByConditionLong$x
meansByConditionLong$se<-sdByConditionLong$x/sqrt(irt_props$n)
### difference in condition means
diffs<-list(Condition="Increase", `D`=diff(meansByCondition$`D`), `Q`= diff(meansByCondition$`Q`))
meansByCondition<-rbind(meansByCondition, diffs)
cdiff <- meansByCondition$`D`[3]-meansByCondition$`Q`[3]
meansByConditionS <- meansByCondition
meansByConditionS$`D` <- meansByConditionS$`D`/1000
meansByConditionS$`Q` <- meansByConditionS$`Q`/1000
meansByConditionS$Condition <- c("Mod", "Arg", "Mod - Arg")
meansByConditionS$`Q - D` <- meansByConditionS$Q - meansByConditionS$D
meansByConditionLong$Qn <- ifelse(
meansByConditionLong$Q == "Q",
"Interrogative",
"Declarative"
)
meansByConditionLong$GPn <- ifelse(
meansByConditionLong$GP == "+GP",
"Arg",
"Mod"
)
ggplot(
meansByConditionLong,
aes(mean/1000,x=reorder(GPn, desc(GPn)),y=mean/1000,group=Qn,linetype=Qn)
) +
geom_line() +
geom_point() +
ylim(5.75,7.25) +
geom_errorbar(aes(ymin=(mean-se)/1000, ymax=(mean+se)/1000), width=.125) +
labs(
x="",
y="Mean IRT (ms)",
linetype="",
title="Mean IRT by condition",
subtitle = "Error bars represent one standard error"
)
ggsave("interact.pdf",device=cairo_pdf())
dev.off()
csv <- '
FULL MODEL,Estimate,Std. Error,p
D Mod (Intercept),6.32,0.59,< 0.001
Q,0.29,0.3,0.34
Arg,0.42,0.3,0.17
Q : Arg,0.08,0.43,0.85
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption=
"Linear mixed effects regression model predicting wIRT by sentence type with interaction term (FULL)."
) %>%
kable_styling(latex_options = "hold_position")
csv <- '
REDUCED MODEL,Estimate,Std. Error,p
D Mod (Intercept),6.3,0.58,< 0.001
Q,0.33,0.21,0.12
Arg,0.46,0.21,< 0.05
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption=
"Linear mixed effects regression model predicting wIRT by sentence type (REDUCED)."
) %>%
kable_styling(latex_options = "hold_position")
csv <- '
PP2 head model,Estimate,Std. Error,p
D into/onto (Intercept),6.76,0.58,< 0.001
Q,0.32,0.21,0.13
from,-0.08,0.27,0.77
of,-0.84,0.27,< 0.01
'
tab <- read_csv(csv)
tab %>% kable(
align="rccc",
caption=
"Linear mixed effects regression model predicting wIRT by Speech Act and PP2 head."
) %>%
kable_styling(latex_options = "hold_position") %>% save_kable("pp2heads.pdf")
library(scales)
library(readr)
irt_fillers <- subset(read_csv("export/all_data.csv"), isFiller)
mean.irtByQ <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q),
FUN=mean
)
mean.irtByPP <- aggregate(
irt_fillers$irt,
by=list("+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mean.irtByQnPP <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q,"+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mdata <- read_csv("export/prosody_data.csv")
View(mdata)
pp1.full <- glmer(PP1 ~ SpeechAct * PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
library(lme4)
pp1.full <- glmer(PP1 ~ SpeechAct * PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1 <- glmer(PP1 ~ SpeechAct * PP2Status + Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1b <- glmer(PP1 ~ SpeechAct * Reading + PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1b
pp1.red1b %>% summary
pp1.red1a %>% summary
pp1.red1a <- glmer(PP1 ~ SpeechAct * PP2Status + Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1a %>% summary
pp1.red2 <- glmer(PP1 ~ SpeechAct  * PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red2 %>% summary
pp1.red3 <- glmer(PP1 ~ SpeechAct  + PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red4 <- glmer(PP1 ~ PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red3 <- glmer(PP1 ~ SpeechAct  + PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.min <- glmer(PP1 ~ 1 + (1|SID) + (1|IID),data=mdata,family = "binomial")
anova(pp1.min,pp1.full,pp1.red1a,pp1.red1b,pp1.red2,pp1.red3,pp1.red4)
anova(pp1.min,pp1.red3)
anova(pp1.min,pp1.red2)
anova(pp1.min,pp1.red1)
anova(pp1.min,pp1.full)
anova(pp1.full,pp1.red1a)
anova(pp1.full,pp1.red1b)
anova(pp1.full,pp1.red2)
anova(pp1.red2,pp1.red3)
anova(pp1.red3,pp1.red4)
anova(pp1.red4,pp1.min)
anova(pp1.red4,pp1.min)
anova(pp1.full,pp1.red2)
anova(pp1.red2,pp1.red3)
library(readr)
library(lme4)
mdata <- read_csv("export/prosody_data.csv")
pp1.full <- glmer(PP1 ~ SpeechAct * PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1a <- glmer(PP1 ~ SpeechAct * PP2Status + Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1b <- glmer(PP1 ~ SpeechAct * Reading + PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red2 <- glmer(PP1 ~ SpeechAct  * PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red3 <- glmer(PP1 ~ SpeechAct  + PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red4 <- glmer(PP1 ~ PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.min <- glmer(PP1 ~ 1 + (1|SID) + (1|IID),data=mdata,family = "binomial")
anova(pp1.full,pp1.red2)
anova(pp1.red2,pp1.red3)
anova(pp1.red3,pp1.red4)
anova(pp1.red4,pp1.min)
summary(pp1.full)
library(readr)
library(lme4)
mdata <- read_csv("export/prosody_data.csv")
pp1.full <- glmer(PP1 ~ SpeechAct * PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1a <- glmer(PP1 ~ SpeechAct * PP2Status + Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red1b <- glmer(PP1 ~ SpeechAct * Reading + PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red2 <- glmer(PP1 ~ SpeechAct  * PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red3 <- glmer(PP1 ~ SpeechAct  + PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.red4 <- glmer(PP1 ~ PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
pp1.min <- glmer(PP1 ~ 1 + (1|SID) + (1|IID),data=mdata,family = "binomial")
anova(pp1.full,pp1.red2)
anova(pp1.red2,pp1.red3)
anova(pp1.red3,pp1.red4)
anova(pp1.red4,pp1.min)
summary(pp1.red4)
pp1.redRS <- glmer(PP1 ~ PP2Status + (1 + PP2Status|SID) + (1+PP2Stats|IID),data=mdata,family = "binomial")
pp1.redRS <- glmer(PP1 ~ PP2Status + (1 + PP2Status|SID) + (1+PP2Status|IID),data=mdata,family = "binomial")
pp1.red5 <- glmer(PP1 ~ SpeechAct + (1|SID) + (1|IID),data=mdata,family = "binomial")
anova(pp1.red5,pp1.min)
pp1.min <- glmer(PP1 ~ (1|SID) + (1|IID),data=mdata,family = "binomial")
anova(pp1.red5,pp1.min)
anova(pp1.red4,pp1.min)
pp1.red6 <- glmer(PP1 ~ PP2Status + (1|IID),data=mdata,family = "binomial")
anova(pp1.red6,pp1.red4)
pp1.red7 <- glmer(PP1 ~ PP2Status + (1|SID),data=mdata,family = "binomial")
anova(pp1.red7,pp1.red4)
anova(pp1.red4,pp1.red7)
anova(pp1.red4,pp1.red6)
library(readr)
library(lme4)
mdata <- read_csv("export/prosody_data.csv")
obj.full <- glmer(OBJ ~ SpeechAct * PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red1a <- glmer(OBJ ~ SpeechAct * PP2Status + Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red1b <- glmer(OBJ ~ SpeechAct * Reading + PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red2 <- glmer(OBJ ~ SpeechAct  * PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red3 <- glmer(OBJ ~ SpeechAct  + PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red4 <- glmer(OBJ ~ PP2Status + (1 + PP2Status|SID) + (1+PP2Stats|IID),data=mdata,family = "binomial")
obj.redRS <- glmer(OBJ ~ PP2Status + (1 + PP2Status|SID) + (1+PP2Status|IID),data=mdata,family = "binomial")
obj.min <- glmer(OBJ ~ (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red5 <- glmer(OBJ ~ SpeechAct + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red6 <- glmer(OBJ ~ PP2Status + (1|IID),data=mdata,family = "binomial")
obj.red7 <- glmer(OBJ ~ PP2Status + (1|SID),data=mdata,family = "binomial")
anova(obj.full,obj.red2)
anova(obj.red2,obj.red3)
anova(obj.red3,obj.red4)
anova(obj.red4,obj.min)
anova(obj.red5,obj.min)
summary(obj.red4)
library(readr)
library(lme4)
mdata <- read_csv("export/prosody_data.csv")
obj.full <- glmer(OBJ ~ SpeechAct * PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red1a <- glmer(OBJ ~ SpeechAct * PP2Status + Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red1b <- glmer(OBJ ~ SpeechAct * Reading + PP2Status * Reading + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red2 <- glmer(OBJ ~ SpeechAct  * PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red3 <- glmer(OBJ ~ SpeechAct  + PP2Status + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red4 <- glmer(OBJ ~ PP2Status + (1 + PP2Status|SID) + (1+PP2Status|IID),data=mdata,family = "binomial")
obj.redRS <- glmer(OBJ ~ PP2Status + (1 + PP2Status|SID) + (1+PP2Status|IID),data=mdata,family = "binomial")
obj.min <- glmer(OBJ ~ (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red5 <- glmer(OBJ ~ SpeechAct + (1|SID) + (1|IID),data=mdata,family = "binomial")
obj.red6 <- glmer(OBJ ~ PP2Status + (1|IID),data=mdata,family = "binomial")
obj.red7 <- glmer(OBJ ~ PP2Status + (1|SID),data=mdata,family = "binomial")
anova(obj.full,obj.red2)
anova(obj.red2,obj.red3)
anova(obj.red3,obj.red4)
anova(obj.red4,obj.min)
anova(obj.red5,obj.min)
summary(obj.red4)
summary(obj.red3)
#best
summary(obj.red3)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
View(adata)
adata$GP <- ifelse(grepl("N",adata$REC),FALSE,TRUE)
adata$GP == adata$Condition_GP
table(adata$GP == adata$Condition_GP )
adata$Q <- ifelse(grepl("Q",adata$REC),TRUE,FALSE)
adata$Q == adata$Condition_Q
table(adata$Q == adata$Condition_Q)
adata_nonorm <- subset(adata,r1DelCat != "NORMAL")
delcatmod <- glmer(odom ~ Condition_GP * Condition_Q * Reading * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod)
delcatmod2 <- glmer(odom ~ Condition_GP * Condition_Q * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod2)
delcatmod3 <- glmer(odom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod3)
delcatmod4 <- glmer(odom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
delcatmod5 <- glmer(odom ~ Condition_GP + r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod5)
delcatmod6 <- glmer(odom ~ Condition_GP + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
anova(delcatmod5,delcatmod6)
savehistory("hist.R")
library(readr)
library(lme4)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata_nonorm <- subset(adata,r1DelCat != "NORMAL")
delcatmod <- glmer(odom ~ Condition_GP * Condition_Q * Reading * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod)
delcatmod2 <- glmer(odom ~ Condition_GP * Condition_Q * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod2)
delcatmod3 <- glmer(odom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod3)
delcatmod4 <- glmer(odom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
delcatmod5 <- glmer(odom ~ Condition_GP + r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod5)
delcatmod6 <- glmer(odom ~ Condition_GP + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
anova(delcatmod5,delcatmod6)
savehistory("hist.R")
library(readr)
library(lme4)
adata <- read_csv("../drafts/export/prosody_with_r1delcat.csv")
adata_nonorm <- subset(adata,r1DelCat != "NORMAL")
delcatmod <- glmer(odom ~ Condition_GP * Condition_Q * Reading * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod)
delcatmod2 <- glmer(odom ~ Condition_GP * Condition_Q * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod2)
delcatmod3 <- glmer(odom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod3)
delcatmod4 <- glmer(odom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
delcatmod5 <- glmer(odom ~ Condition_GP + r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatmod5)
delcatmod6 <- glmer(odom ~ Condition_GP + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
anova(delcatmod5,delcatmod6)
adata_nonorm <- subset(adata,r1DelCat != "NORMAL")
delcatpdom <- glmer(pdom ~ Condition_GP * Condition_Q * Reading * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatpdom)
delcatpdom2 <- glmer(pdom ~ Condition_GP * Condition_Q * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatpdom2)
delcatpdom3 <- glmer(pdom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatpdom3)
delcatpdom4 <- glmer(pdom ~ Condition_GP * r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
delcatpdom5 <- glmer(pdom ~ Condition_GP + r1DelCat + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
summary(delcatpdom5)
delcatpdom6 <- glmer(pdom ~ Condition_GP + (1|Participant) + (1|IID),data=adata_nonorm,family="binomial")
anova(delcatpdom5,delcatpdom6)
citr:::insert_citation()
library(kableExtra)
knitr::opts_chunk$set(echo = F,warning = F,message=F)
Label <- c("Start", "Next", "Done")
Position <- c("Left shift", "Right shift", "Thumb pad")
Description <- c("Revewal a sentence and begin your reading.", "End your first reading.", "End your second reading and prepare for the next sentence.")
keyTable <- data.frame(Label,Position,Description)
kable(keyTable,booktabs=T) %>%
kable_styling(latex_options = "hold_position")
