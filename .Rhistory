totDisp,
col.names=c(" ", "D", "Q"),
caption="N by condition"
) %>% kable_styling(latex_options = c("hold_position"))
### r2
r2data <- subset(mdata,Reading==2)
pp1tab<-xtabs(PP1 ~ Condition_GP + Condition_Q, data=r2data)
objtab<-xtabs(OBJ ~ Condition_GP + Condition_Q, data=r2data)
tot<-as.data.frame(xtabs( ~ Condition_GP + Condition_Q, data=r2data))
pp1<-as.data.frame(pp1tab)
pp1$tot<-tot$Freq
pp1$pct <- pp1$Freq/pp1$tot
pp1$pretty <- paste0(
pp1$Freq,
" (",
sprintf("%.1f",pp1$pct * 100),
"%)"
)
pp1disp <- pp1 %>%
subset(select=c(
"Condition_GP",
"Condition_Q",
"pretty"
)) %>%
spread(Condition_Q,pretty)
obj<-as.data.frame(objtab)
obj$tot<-tot$Freq
obj$pct <- obj$Freq/obj$tot
obj$pretty <- paste0(
obj$Freq,
" (",
sprintf("%.1f",obj$pct * 100),
"%)"
)
objdisp <- obj %>%
subset(select=c(
"Condition_GP",
"Condition_Q",
"pretty"
)) %>%
spread(Condition_Q,pretty)
pp1obj <- cbind(pp1disp,objdisp[2:3])
pp1obj[[1]] <- c("-GP","+GP")
### r1
r1data <- subset(mdata,Reading==1)
pp1tab<-xtabs(PP1 ~ Condition_GP + Condition_Q, data=r1data)
objtab<-xtabs(OBJ ~ Condition_GP + Condition_Q, data=r1data)
tot<-as.data.frame(xtabs( ~ Condition_GP + Condition_Q, data=r1data))
pp1<-as.data.frame(pp1tab)
pp1$tot<-tot$Freq
pp1$pct <- pp1$Freq/pp1$tot
pp1$pretty <- paste0(
pp1$Freq,
" (",
sprintf("%.1f",pp1$pct * 100),
"%)"
)
pp1disp <- pp1 %>%
subset(select=c(
"Condition_GP",
"Condition_Q",
"pretty"
)) %>%
spread(Condition_Q,pretty)
obj<-as.data.frame(objtab)
obj$tot<-tot$Freq
obj$pct <- obj$Freq/obj$tot
obj$pretty <- paste0(
obj$Freq,
" (",
sprintf("%.1f",obj$pct * 100),
"%)"
)
objdisp <- obj %>%
subset(select=c(
"Condition_GP",
"Condition_Q",
"pretty"
)) %>%
spread(Condition_Q,pretty)
pp1objr1 <- cbind(pp1disp,objdisp[2:3])
pp1objr1[[1]] <- c("-GP","+GP")
kable(
pp1obj,
caption="Reading 2 recordings containing PP1/OBJ break by condition",
col.names = c("", "D", "Q","D", "Q")
) %>%
add_header_above(c(" "=1,"PP1 Break"=2,"OBJ Break"=2)) %>%
kable_styling(latex_options = c("hold_position"))
kable(
pp1objr1,
caption="Reading 1 recordings containing PP1/OBJ break by condition",
col.names = c("", "D", "Q","D", "Q")
) %>%
add_header_above(c(" "=1,"PP1 Break"=2,"OBJ Break"=2)) %>%
kable_styling(latex_options = c("hold_position"))
r2pdata<-droplevels(subset(mdata,Reading==2 & simple2lvl != "NEITHER"))
qdata <- subset(r2pdata,Condition_GP)
ddata <- subset(r2pdata,!Condition_GP)
qpros<-table(qdata$simple2lvl,qdata$Condition_Q) %>%
prop.table(margin=2) %>% `*`(100) %>%
round(1)
colnames(qpros)<-c("D","Q")
dpros<-table(ddata$simple2lvl,ddata$Condition_Q) %>%
prop.table(margin=2) %>% `*`(100) %>%
round(1)
colnames(dpros)<-c("D","Q")
ccombo<-as.data.frame(cbind(dpros,qpros))
rownames(ccombo)<-c("Both", "OBJ only", "PP1 only")
write_csv(ccombo,"export/ccombo.csv")
kable(ccombo,caption="Combined breaks by condition in Reading 2 only",align="c") %>%
add_header_above(c(" "=1,"Non-garden path" = 2, "Garden path"=2)) %>%
column_spec(1,bold=T)%>% kable_styling(latex_options = "hold_position")
p2lv<-prop.table(xtabs(~two_level_prosody+condition,data=subset(mdata,Reading==2)),margin = 2) * 100
kable(p2lv, digits = 1, caption="Reading 1 prosodic pattern type by condition") %>% kable_styling()
pdom <- xtabs(~condition+pdom,data=mdata)%>% prop.table(margin=1)
pdom.r1 <- xtabs(~condition+pdom,data=subset(mdata,Reading==1))%>% prop.table(margin=1)
pdom.r2 <- xtabs(~condition+pdom,data=subset(mdata,Reading==2))%>% prop.table(margin=1)
odom <- xtabs(~condition + odom ,data=mdata) %>% prop.table(margin=1)
odom.r1 <- xtabs(~condition + odom,data=subset(mdata,Reading==1))%>% prop.table(margin=1)
odom.r2 <- xtabs(~condition + odom,data=subset(mdata,Reading==2))%>% prop.table(margin=1)
domtab<-cbind(odom.r2,pdom.r2)* 100
kable(
domtab,
caption="Break dominance by condition, Reading 2 only",
col.names=c(rep(c("Not dominant", "Dominant"), 2)),
align="c",
digits=1
) %>%
add_header_above(c(" "=1, "OBJ" = 2, "PP1" = 2)) %>%
kable_styling(latex_options = c("hold_position"))
r2data<-subset(mdata,Reading==2)
pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
objMod<- glmer(OBJ~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
pdomMod<- glmer(pdom~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
odomMod<- glmer(odom~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
both.pp1Mod<- glmer(PP1~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.objMod<- glmer(OBJ~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.pdomMod<- glmer(pdom~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.odomMod<- glmer(odom~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
huxreg(
list("PP1"=both.pp1Mod,"OBJ"=both.objMod,"PP1 Dominance"=both.pdomMod,"OBJ Dominance"=both.odomMod),
coefs = c(
"Intercept"="(Intercept)",
"GP"="Condition_GPTRUE",
"Q"="Condition_QTRUE",
"GP:Q Interaction"="Condition_QTRUE:Condition_GPTRUE",
"Reading" = "Reading2"
),
statistics = c(
N="nobs",
"logLik",
"AIC"
)
) %>%
set_caption("Logistic regression models of prosody") %>%
set_label("lmPros") %>%
set_tabular_environment("tabular")
huxreg(
list("OBJ"=objMod,"PP1 Dominance"=pdomMod,"OBJ Dominance"=odomMod),
coefs = c(
"Intercept"="(Intercept)",
"GP"="Condition_GPTRUE",
"Q"="Condition_QTRUE",
"GP:Q Interaction"="Condition_QTRUE:Condition_GPTRUE"
),
statistics = c(
N="nobs",
"logLik",
"AIC"
)
) %>%
set_caption("Logistic regression models of prosody, Reading 2 only") %>%
set_label("lmPros") %>%
set_tabular_environment("tabular")
histSettings = geom_histogram(binwidth = 0.5,color="white",fill="#333333")
ggplot(irt_data, aes(irt/1000)) +
histSettings +
xlab("Raw IRT (seconds)") +
ylab("Frequency") +
ggtitle(
"Distribution of raw IRT",
subtitle="Bin size = 0.5s"
)
ggplot(irt_data, aes(win_irt/1000)) +
histSettings +
xlab("wIRT (seconds)") +
ylab("Frequency") +
ggtitle(
"Distribution of wIRT",
subtitle="Bin size = 0.5s"
)
meansByConditionS <- meansByCondition
meansByConditionS$`D` <- meansByConditionS$`D`/1000
meansByConditionS$`Q` <- meansByConditionS$`Q`/1000
kable(
meansByConditionS,
caption = "Means (s) by condition",
digits = 2
)%>% kable_styling(latex_options = "hold_position")
meansByConditionLong$Qn <- ifelse(
meansByConditionLong$Q == "Q",
"Interrogative",
"Declarative"
)
meansByConditionLong$GPn <- ifelse(
meansByConditionLong$GP == "+GP",
"Garden path",
"Non-garden path"
)
ggplot(
meansByConditionLong,
aes(mean/1000,x=GPn,y=mean/1000,group=Qn,linetype=Qn)
) +
geom_line() +
geom_point() +
ylim(6,7.2) +
geom_errorbar(aes(ymin=(mean-se)/1000, ymax=(mean+se)/1000), width=.125) +
labs(
x="",
y="Mean IRT (ms)",
linetype="",
title="Mean IRT by condition",
subtitle = "Confidence intervals represent one standard error"
)
irt.full <- lme4::lmer(
wirt ~ Condition_Q * Condition_GP +
(1 | Participant) +
(1 | Item),
data = irt_data,
REML=F
)
irt.noInteraction <- lme4::lmer(
wirt ~ Condition_Q + Condition_GP +
(1 | Participant) +
(1 | Item),
data = irt_data,
REML=F
)
irt.noParticipant <- lme4::lmer(
wirt ~ Condition_Q * Condition_GP +
(1 | Item),
data = irt_data,
REML=F
)
irt.noItem <- lme4::lmer(
wirt ~ Condition_Q * Condition_GP +
(1 | Participant),
data = irt_data,
REML=F
)
irt.noFxd <- lme4::lmer(
wirt ~
(1 | Participant) +
(1 | Item),
data = irt_data,
REML=F
)
irt.noRand <- lm(wirt ~ Condition_Q * Condition_GP,
data = irt_data)
irt.dummy <- lm(wirt ~ Condition_Q * Condition_GP,
data = irt_data
)
irt.dummy.noInt <- lm(wirt ~  Condition_Q + Condition_GP +
Participant + Item,
data = irt_data
)
irt.demoModel.KS <- lmerTest::lmer(
wirt ~ Condition_Q * Condition_GP + Semester + wkd + Gender + ease + timeslot +
bookReading + lightReading + Monolingual + (1|Participant) + (1|Item),
data = irt_data,
REML=F
)
irt.demoModel <- lmerTest::lmer(
wirt ~ Condition_Q * Condition_GP + Semester + wkd +
Monolingual + (1|Participant) + (1|Item),
data = irt_data,
REML=F
)
irt.summer <- lmerTest::lmer(
wirt ~ Condition_Q * Condition_GP +
Monolingual + (1|Participant) + (1|Item),
data = subset(irt_data, Semester!="Summer"),
REML=F
)
huxreg(
list(
"Full"=irt.full,
"No interaction"=irt.noInteraction,
"No random effects"=irt.noRand,
"No fixed effects"=irt.noFxd
),
coefs = c(
"+GP"="Condition_GPTRUE",
"Q"="Condition_QTRUE",
"+GP Q"="Condition_QTRUE:Condition_GPTRUE"
),
note=NULL,
statistics = c(N="nobs","logLik","AIC")
) %>%
set_caption("Models") %>%
set_label("tab:models") %>%
set_tabular_environment("tabular")
cols <- c(
"Df",
"AIC",
"BIC",
"logLik",
"deviance",
"$\\chi^2$",
"Df($\\chi$)",
"Pr(>$\\chi^2$)"
)
comp <-anova(irt.full,irt.noFxd)
row.names(comp) <- c("No fixed effects", "Full")
kable(comp,caption="Full model vs. no fixed effects",col.names=cols,escape=F)
comp <-anova(irt.full,irt.noInteraction)
row.names(comp) <- c("No interaction", "Full")
kable(comp,caption="Full model vs. no interaction",col.names=cols,escape=F)
comp <- anova(irt.full,irt.noRand)
row.names(comp) <- c("No random effects", "Full")
kable(comp,caption="Full model vs. no random effects",col.names=cols,escape=F)
### tab <- hux(comp[,c(1:2,4,6:8)],autoformat = T)
### tab <- add_rows(
###   tab,
###   hux("Df","AIC","logLik","&Chi;<sup>2</sup>","Df(&Chi;)","p value"),
###   after=0
### )
### tab <- insert_column(
###   tab, c("","No random effects", "Full")
### )
###
### tab %>% set_escape_contents(F,row=1,col=5:7) %>%
###   set_number_format(value=2,col = c(3:5,7),row=2:3) %>%
###   set_label("tab:modComp2") %>%
###   set_caption("No random effects vs. full model") %>%
###   set_top_border(row=1,value=1,col=everywhere) %>%
###   set_bottom_border(row=1,value=1,col=2:7) %>%
###   set_bottom_border(row=final(1),value=1,col=everywhere)
### means by condition table
meansByVerb <- aggregate(
irt_data$win_irt/1000,
by=list(
"Condition"=irt_data$cond,
"Verb"=irt_data$V
),
FUN=mean
) %>% spread(Condition,x)
### sd by condition table
sdByVerb <- aggregate(
irt_data$win_irt/1000,
by=list(
"Condition"=irt_data$cond,
"Verb"=irt_data$V
),
FUN=sd
) %>% spread(Condition,x)
meansByVerb$`Declarative GP effect`<-meansByVerb$`D +GP`-meansByVerb$`D -GP`
meansByVerb$`Interrogative GP effect`<-meansByVerb$`Q +GP`-meansByVerb$`Q -GP`
meansByVerb$`Difference in effect`<-meansByVerb$`Declarative GP effect`-meansByVerb$`Interrogative GP effect`
meansNsd<-sdByVerb
for (col in colnames(meansNsd)[2:5]){
meansNsd[[col]]<- paste(
round(meansByVerb[[col]],1),
" (",
round(meansNsd[[col]],1),
")",
sep=""
)
}
kable(
meansNsd,
caption="Mean (sd) wIRT by condition and verb in seconds"
) %>%
kable_styling(latex_options = "hold_position")
kable(meansByVerb[,c(1,6:8)],caption="Effect of GP on wIRT by verb", digits=1) %>% kable_styling(latex_options = "hold_position")
kable(
pmeansByCondition[c(1:5)],
caption="Mean wIRT (ms) by condition and participant",
longtable=T
)%>% kable_styling(latex_options = c("hold_position", "repeat_header"))
mean.irtByQ <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q),
FUN=mean
)
mean.irtByPP <- aggregate(
irt_fillers$irt,
by=list("+PP"=irt_fillers$Condition_GP),
FUN=mean
)
mean.irtByQnPP <- aggregate(
irt_fillers$irt,
by=list("Q"=irt_fillers$Condition_Q,"+PP"=irt_fillers$Condition_GP),
FUN=mean
)
fillerModel <- lme4::lmer(
irt ~ Condition_Q + (1 |Participant) + (1 |Item),
data=irt_fillers,
REML=F
)
fillerModel.pp <- lme4::lmer(
irt ~ Condition_Q * Condition_GP + (1|Participant) + (1 |Item),
data=irt_fillers,
REML=F
)
fillerModel.ppNoInt <- lme4::lmer(
irt ~ Condition_Q + Condition_GP + (1|Participant) + (1 |Item),
data=irt_fillers,
REML=F
)
huxreg(
list("Only Interogitivity"=fillerModel,"Full"=fillerModel.pp,"No interaction"=fillerModel.ppNoInt),
number_format = 2,
coefs=c(
"(Intercept)"="(Intercept)",
"Q" = "Condition_QTRUE",
"+GP" ="Condition_GPTRUE",
"Q * +GP" = "Condition_QTRUE:Condition_GPTRUE"
)
)
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs_file$UID <- as.factor(with(raw_rs_file, paste(Participant,Item,Reading,sep="-")))
raw_rs_file <- subset(raw_rs_file,UID %in% mdata$UID)
raw_rs <- subset(raw_rs_file,!isFiller)
raw_rs$reading <- raw_rs$Reading
raw_rs$Reading <- ifelse(raw_rs$reading == 1, "Cold", "Previewed")
ggplot(raw_rs, aes(Leading/1000, fill = Reading)) +
geom_histogram(binwidth = 0.5,position="dodge",color="black") +
scale_fill_manual(values=c("black","white")) +
ggtitle("Distribution of delay by reading",
subtitle = "Bin size = 0.5s")
diffs <- raw_rs[c("Reading","Leading","Participant","Item","isFiller",
"Condition_Q","Condition_GP")]  %>% spread(Reading,Leading)
diffs$diffs <- diffs$Previewed-diffs$Cold
diffDis<- describe(diffs$diffs)
diffsByP<-aggregate(diffs~Participant,data=diffs,FUN=function(x){round(mean(x))})
colnames(diffsByP) <- c("Participant", "Mean difference in delay (ms)")
diffsByP.props <- describe(diffsByP$`Mean difference in delay (ms)`)
knitr::opts_chunk$set(
echo=FALSE,
warning=FALSE,
message=FALSE,
fig.height = 3,
fig.pos="H"
)
options(tinytex.verbose = TRUE)
bgcolor <- "#ffffff"
par(bg = bgcolor)
kable <- function(data,...) {
knitr::kable(data, booktabs = TRUE,...)
}
ms2s<-function(x,d=2) {
return (format(x/1000,nsmall=d,digits=d))
}
library(extrafont)
library(readr)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(psych)
library(ggthemes)
hidel <- 1050
lodel <- 901
mdata <- read_csv("../drafts/export/prosody_data.csv")
raw_rs_file <- read_csv("../csvs/merged.csv")
raw_rs_file$UID <- as.factor(with(raw_rs_file, paste(Participant,Item,Reading,sep="-")))
raw_rs_file <- subset(raw_rs_file,UID %in% mdata$UID)
raw_rs <- subset(raw_rs_file,!isFiller)
raw_rs$reading <- raw_rs$Reading
r1data <- subset(raw_rs, reading == 1)
r1delByP <- aggregate(r1data$Leading,by=list("Participant" = r1data$Participant), FUN=median)
r1delByP$r1DelCat <- ifelse(r1delByP$x < lodel, "FAST", ifelse(
r1delByP$x > hidel, "SLOW", "NORMAL"
))
catdes <- sprintf("FAST median R1 delay $\\\\leq$ %0.2fs. SLOW median R1 delay $>$ %0.2fs",lodel/1000,hidel/1000)
r1deldes <- describe(r1delByP$r1delbyp)
library(lmtest)
install.packages("lmtest")
library(lmtest)
lrtest(objMod)
lrtest(objMod) %>% summary
?lmtest
?lkrtest
?lrtest
r2data<-subset(mdata,Reading==2)
pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
objMod<- glmer(OBJ~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
pdomMod<- glmer(pdom~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
odomMod<- glmer(odom~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
lrtest(pp1Mod)
lrtest(both.objMod)
anova(objMod,objmod.best)
r2data<-subset(mdata,Reading==2)
pp1Mod<- glmer(PP1~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
objMod<- glmer(OBJ~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
pdomMod<- glmer(pdom~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
odomMod<- glmer(odom~Condition_Q*Condition_GP+(1|IID)+(1|SID),data=r2data,family=binomial)
both.pp1Mod<- glmer(PP1~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.objMod<- glmer(OBJ~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.pdomMod<- glmer(pdom~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.odomMod<- glmer(odom~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.pp1Mod.full<- glmer(PP1~Reading+Condition_Q*Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
both.pp1Mod.red1<- glmer(PP1~Reading+Condition_Q+Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
anova(both.pp1Mod.full,both.pp1Mod.red1)
summary(both.pp1Mod.red1)
both.pp1Mod.red2<- glmer(PP1~Condition_Q+Condition_GP+(1|IID)+(1|SID),data=mdata,family=binomial)
anova(both.pp1Mod.full,both.pp1Mod.red2)
anova(both.pp1Mod.full)
anova(both.pp1Mod.full, NULL)
