{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"plm(win_irt ~ Condition_Q * Condition_GP, data = irt_data, model = \"within\", \n    index = c(\"Participant\", \"Item\"), effect = \"twoways\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"plm.fit(formula, data, model, effect, random.method, random.models, \n    random.dfcor, inst.method)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"pmodel.response(formula, data = data, model = model, effect = effect, \n    theta = theta)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"pmodel.response.formula(formula, data = data, model = model, \n    effect = effect, theta = theta)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"ptransform(y, model = model, effect = effect, theta = theta)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Within(x, effect)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Within.pseries(x, effect)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Within(x, \"individual\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Within.pseries(x, \"individual\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"Ops.pseries(x, Between(x, effect, ...))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"isTRUE(all.equal(index_e1, index_e2))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal(index_e1, index_e2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal.default(index_e1, index_e2)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal.list(target, current, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"attr.all.equal(target, current, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal(ax, ay, ..., check.attributes = check.attributes)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal.list(ax, ay, ..., check.attributes = check.attributes)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal(target[[i]], current[[i]], check.attributes = check.attributes, \n    use.names = use.names, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"all.equal.tbl_df(target[[i]], current[[i]], check.attributes = check.attributes, \n    use.names = use.names, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"equal_data_frame(target, current, ignore_col_order = ignore_col_order, \n    ignore_row_order = ignore_row_order, convert = convert)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(structure(list(message = \"Can't join on '.rows' x '.rows' because of incompatible types (list / list)\", \n    call = NULL, cppstack = NULL), class = c(\"Rcpp::exception\", \n\"C++Error\", \"error\", \"condition\")))","line_number":0}],"message":"Error: Can't join on '.rows' x '.rows' because of incompatible types (list / list)\n"}